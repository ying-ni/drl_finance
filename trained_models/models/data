{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVMAAAAAAAAACMHnN0YWJsZV9iYXNlbGluZXMzLnRkMy5wb2xpY2llc5SMCVREM1BvbGljeZSTlC4=",
        "__module__": "stable_baselines3.td3.policies",
        "__annotations__": "{'actor': <class 'stable_baselines3.td3.policies.Actor'>, 'actor_target': <class 'stable_baselines3.td3.policies.Actor'>, 'critic': <class 'stable_baselines3.common.policies.ContinuousCritic'>, 'critic_target': <class 'stable_baselines3.common.policies.ContinuousCritic'>}",
        "__doc__": "\n    Policy class (with both actor and critic) for TD3.\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    :param n_critics: Number of critic networks to create.\n    :param share_features_extractor: Whether to share or not the features extractor\n        between the actor and the critic (this saves computation time)\n    ",
        "__init__": "<function TD3Policy.__init__ at 0x7f301f43cc10>",
        "_build": "<function TD3Policy._build at 0x7f301f43cca0>",
        "_get_constructor_parameters": "<function TD3Policy._get_constructor_parameters at 0x7f301f43cd30>",
        "make_actor": "<function TD3Policy.make_actor at 0x7f301f43cdc0>",
        "make_critic": "<function TD3Policy.make_critic at 0x7f301f43ce50>",
        "forward": "<function TD3Policy.forward at 0x7f301f43cee0>",
        "_predict": "<function TD3Policy._predict at 0x7f301f43cf70>",
        "set_training_mode": "<function TD3Policy.set_training_mode at 0x7f301f43d000>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x7f301f4447c0>"
    },
    "verbose": 1,
    "policy_kwargs": {
        "n_critics": 1
    },
    "num_timesteps": 50000,
    "_total_timesteps": 50000,
    "_num_timesteps_at_start": 0,
    "seed": null,
    "action_noise": null,
    "start_time": 1713855465719354156,
    "learning_rate": 0.001,
    "tensorboard_log": null,
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVDwUAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJaYBAAAAAAAALL06Df69SE48ykiuTk7KbnxSP64WTu0uCUKd7n69SE4RTRhOIp8YblOUGu5LMowuRac+rijwKu58ykiuYp8YbnnxGE60ptrOugCMTqD7Po5wferOjk7KblOUGu50ptrOoTgdTrUuTg6Cu4COmh2szrxSP64LMowuegCMTrUuTg6j8gKOsy7xDlA1IY6WTu0uBac+riD7Po5Cu4COsy7xDnOcIs5yiA/OiUKd7mjwKu5wferOmh2szpA1IY6yiA/Osn8AjsMAqs+AiuHPhBYOT5YOTQ9ppsEP0SLbD7sUfg+JbUVwIZhmEBK8+JB60MjwbtG9cBOb4LBnHK7P629sDsL0DC7KRdyPQ9itjzo3BY9UyjLPIrmID650so88BLnuCxxKj5SFCk+q4z0PSKhxT3LBWM+V2A6PdjXfLyfY9Y+3SjRPguHpz5fyYU+cCQRP/Cgpj20djq8EvFCPqE4sT5KDvw9/YOXPRbZWz6R/3493FooPQbWWr6P/s+9tdU3viteFL5oLLa+t4hgProaPDxQ9h4/EilXP4ue2j4Xlp8+lv9NP5KgMz3IexY751b+PdsgLD485a49i1Z/PXjMJD6JIc1CROuzQuxRX0J3vh1C8KfGQt1kKUJUIxBCdTHMQrk8tEIVDFNCLcMVQoORvUI9GyNCTuIDQtxGy0L0jLdCXnpJQig+DkJHw7ZC6eYdQuM2/UEX2c49F9nOPRfZzj0X2c49F9nOPRfZzj0X2c49pHA9PqRwPT6kcD0+pHA9PqRwPT6kcD0+pHA9Pt9PHUDfTx1A308dQN9PHUDfTx1A308dQN9PHUCHFmFAhxZhQIcWYUCHFmFAhxZhQIcWYUCHFmFAexQuPnsULj57FC4+exQuPnsULj57FC4+exQuPtu5VkPbuVZD27lWQ9u5VkPbuVZD27lWQ9u5VkM7vxZDO78WQzu/FkM7vxZDO78WQzu/FkM7vxZDprj6v6a4+r+muPq/prj6v6a4+r+muPq/prj6vwN4wz8DeMM/A3jDPwN4wz8DeMM/A3jDPwN4wz+Hw2FGh8NhRofDYUaHw2FGh8NhRofDYUaHw2FGIBl/RiAZf0YgGX9GIBl/RiAZf0YgGX9GIBl/RqRw0UGkcNFBpHDRQaRw0UGkcNFBpHDRQaRw0UHhandE4Wp3ROFqd0ThandE4Wp3ROFqd0ThandEwwcQRsMHEEbDBxBGwwcQRsMHEEbDBxBGwwcQRnF99ERxffREcX30RHF99ERxffREcX30RHF99ESFGwtEhRsLRIUbC0SFGwtEhRsLRIUbC0SFGwtEj2MfRo9jH0aPYx9Gj2MfRo9jH0aPYx9Gj2MfRs1sakTNbGpEzWxqRM1sakTNbGpEzWxqRM1sakRIYYpCSGGKQkhhikJIYYpCSGGKQkhhikJIYYpC7FE4PuxROD7sUTg+7FE4PuxROD7sUTg+7FE4PhWLjEIVi4xCFYuMQhWLjEIVi4xCFYuMQhWLjELs34dC7N+HQuzfh0Ls34dC7N+HQuzfh0Ls34dCImUVQCJlFUAiZRVAImUVQCJlFUAiZRVAImUVQJSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLAUsqSweHlIwBQ5R0lFKULg=="
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdAAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYBAAAAAAAAAAGUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwGFlIwBQ5R0lFKULg=="
    },
    "_last_original_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVDwUAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJaYBAAAAAAAALquRDaKNpg2blEct0sosreN4au3ImE2t+F8ZLiKNpg2lJjrNifzcbdb4Am45gQFuNMkjbfF07C4blEctyfzcbeZefg3RZiNOEabiDhL8xA4mZg1OUsosrdb4Am4RZiNOIpgITkisRs5lDOlOI73zjmN4au35gQFuEabiDgisRs5ADUWOa9hnzj9rMc5ImE2t9MkjbdL8xA4lDOlOK9hnzjSHSk4Ld9TOeF8ZLjF07C4mZg1OY73zjn9rMc5Ld9TOdm3hDoMAqs+AiuHPhBYOT5YOTQ9ppsEP0SLbD7sUfg+JbUVwIZhmEBK8+JB60MjwbtG9cBOb4LBnHK7P/+ogDy0y0Q8R78xPUn2cTzb6wg9WdK3PMfqET4vLNA8kKwhu1eKDj7eaxQ+jqjdPfNsvT2AKjg+6vwxPRtKbbyrdb8+KhqzPhE3lz4E2HE+eJ3xPqmkqT3rKMG7PPw+Pgovoj6dVgM+c9moPfZ0PT7sr449ltRMPXhifr4BUBK+IotXvuDNLr7ylcK+K8RyPhZ1ID2hP/0+avMuP26ktT7Rk4Y+UmYZP4g2Qj2rXQA8TZnKPe/1Cz5YUJE96FJXPYNw9T3nG81CUvizQjOzXkLykh1C003GQqQwKULdJA9CcA7MQpYhtEIOz1JC15IVQgdfvULSACNCKqkDQmw4y0Lwp7dC/QdJQiHwDUJ2cbZCpawdQvtL/EEX2c49F9nOPRfZzj0X2c49F9nOPRfZzj0X2c49fT81Pn0/NT59PzU+fT81Pn0/NT59PzU+fT81PphuGkCYbhpAmG4aQJhuGkCYbhpAmG4aQJhuGkA/NV5APzVeQD81XkA/NV5APzVeQD81XkA/NV5AexQuPnsULj57FC4+exQuPnsULj57FC4+exQuPtu5VkPbuVZD27lWQ9u5VkPbuVZD27lWQ9u5VkM7vxZDO78WQzu/FkM7vxZDO78WQzu/FkM7vxZDprj6v6a4+r+muPq/prj6v6a4+r+muPq/prj6vwN4wz8DeMM/A3jDPwN4wz8DeMM/A3jDPwN4wz+Hw2FGh8NhRofDYUaHw2FGh8NhRofDYUaHw2FGIBl/RiAZf0YgGX9GIBl/RiAZf0YgGX9GIBl/Rrge30G4Ht9BuB7fQbge30G4Ht9BuB7fQbge30G47nREuO50RLjudES47nREuO50RLjudES47nREXL0ORly9DkZcvQ5GXL0ORly9DkZcvQ5GXL0ORuFa8UThWvFE4VrxROFa8UThWvFE4VrxROFa8USFCwlEhQsJRIULCUSFCwlEhQsJRIULCUSFCwlEAK8dRgCvHUYArx1GAK8dRgCvHUYArx1GAK8dRjOTaUQzk2lEM5NpRDOTaUQzk2lEM5NpRDOTaUQAgIVCAICFQgCAhUIAgIVCAICFQgCAhUIAgIVC7FE4PuxROD7sUTg+7FE4PuxROD7sUTg+7FE4Pss8jELLPIxCyzyMQss8jELLPIxCyzyMQss8jEI34YdCN+GHQjfhh0I34YdCN+GHQjfhh0I34YdCjnILQI5yC0COcgtAjnILQI5yC0COcgtAjnILQJSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLAUsqSweHlIwBQ5R0lFKULg=="
    },
    "_episode_num": 15,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": 0.0,
    "_stats_window_size": 100,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 49900,
    "observation_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWVBQ0AAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMDWJvdW5kZWRfYmVsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWJgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUaAiMAmIxlImIh5RSlChLA4wBfJROTk5K/////0r/////SwB0lGJLKksHhpSMAUOUdJRSlIwNYm91bmRlZF9hYm92ZZRoESiWJgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUaBVLKksHhpRoGXSUUpSMBl9zaGFwZZRLKksHhpSMA2xvd5RoESiWmAQAAAAAAAAAAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP+UaAtLKksHhpRoGXSUUpSMBGhpZ2iUaBEolpgEAAAAAAAAAACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/lGgLSypLB4aUaBl0lFKUjAhsb3dfcmVwcpSMBC1pbmaUjAloaWdoX3JlcHKUjANpbmaUjApfbnBfcmFuZG9tlE51Yi4=",
        "dtype": "float32",
        "bounded_below": "[[False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]]",
        "bounded_above": "[[False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]]",
        "_shape": [
            42,
            7
        ],
        "low": "[[-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]]",
        "high": "[[inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]]",
        "low_repr": "-inf",
        "high_repr": "inf",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWVhwIAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMDWJvdW5kZWRfYmVsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWBwAAAAAAAAABAQEBAQEBlGgIjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSweFlIwBQ5R0lFKUjA1ib3VuZGVkX2Fib3ZllGgRKJYHAAAAAAAAAAEBAQEBAQGUaBVLB4WUaBl0lFKUjAZfc2hhcGWUSweFlIwDbG93lGgRKJYcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUaAtLB4WUaBl0lFKUjARoaWdolGgRKJYcAAAAAAAAAAAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD+UaAtLB4WUaBl0lFKUjAhsb3dfcmVwcpSMAzAuMJSMCWhpZ2hfcmVwcpSMAzEuMJSMCl9ucF9yYW5kb22UjBRudW1weS5yYW5kb20uX3BpY2tsZZSMEF9fZ2VuZXJhdG9yX2N0b3KUk5SMBVBDRzY0lGgyjBRfX2JpdF9nZW5lcmF0b3JfY3RvcpSTlIaUUpR9lCiMDWJpdF9nZW5lcmF0b3KUjAVQQ0c2NJSMBXN0YXRllH2UKGg9ihBD7c29mVIOrs3lXsYlnuoQjANpbmOUihAZmbZPMvwtmM4Ev/j75HxsdYwKaGFzX3VpbnQzMpRLAIwIdWludGVnZXKUSwB1YnViLg==",
        "dtype": "float32",
        "bounded_below": "[ True  True  True  True  True  True  True]",
        "bounded_above": "[ True  True  True  True  True  True  True]",
        "_shape": [
            7
        ],
        "low": "[0. 0. 0. 0. 0. 0. 0.]",
        "high": "[1. 1. 1. 1. 1. 1. 1.]",
        "low_repr": "0.0",
        "high_repr": "1.0",
        "_np_random": "Generator(PCG64)"
    },
    "n_envs": 1,
    "buffer_size": 50000,
    "batch_size": 128,
    "learning_starts": 100,
    "tau": 0.005,
    "gamma": 0.99,
    "gradient_steps": 1,
    "optimize_memory_usage": false,
    "replay_buffer_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVNQAAAAAAAACMIHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5idWZmZXJzlIwMUmVwbGF5QnVmZmVylJOULg==",
        "__module__": "stable_baselines3.common.buffers",
        "__annotations__": "{'observations': <class 'numpy.ndarray'>, 'next_observations': <class 'numpy.ndarray'>, 'actions': <class 'numpy.ndarray'>, 'rewards': <class 'numpy.ndarray'>, 'dones': <class 'numpy.ndarray'>, 'timeouts': <class 'numpy.ndarray'>}",
        "__doc__": "\n    Replay buffer used in off-policy algorithms like SAC/TD3.\n\n    :param buffer_size: Max number of element in the buffer\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param device: PyTorch device\n    :param n_envs: Number of parallel environments\n    :param optimize_memory_usage: Enable a memory efficient variant\n        of the replay buffer which reduces by almost a factor two the memory used,\n        at a cost of more complexity.\n        See https://github.com/DLR-RM/stable-baselines3/issues/37#issuecomment-637501195\n        and https://github.com/DLR-RM/stable-baselines3/pull/28#issuecomment-637559274\n        Cannot be used in combination with handle_timeout_termination.\n    :param handle_timeout_termination: Handle timeout termination (due to timelimit)\n        separately and treat the task as infinite horizon task.\n        https://github.com/DLR-RM/stable-baselines3/issues/284\n    ",
        "__init__": "<function ReplayBuffer.__init__ at 0x7f301f75caf0>",
        "add": "<function ReplayBuffer.add at 0x7f301f75cb80>",
        "sample": "<function ReplayBuffer.sample at 0x7f301f75cc10>",
        "_get_samples": "<function ReplayBuffer._get_samples at 0x7f301f75cca0>",
        "_maybe_cast_dtype": "<staticmethod(<function ReplayBuffer._maybe_cast_dtype at 0x7f301f75cd30>)>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x7f301f74f480>"
    },
    "replay_buffer_kwargs": {},
    "train_freq": {
        ":type:": "<class 'stable_baselines3.common.type_aliases.TrainFreq'>",
        ":serialized:": "gAWVYQAAAAAAAACMJXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi50eXBlX2FsaWFzZXOUjAlUcmFpbkZyZXGUk5RLAWgAjBJUcmFpbkZyZXF1ZW5jeVVuaXSUk5SMBHN0ZXCUhZRSlIaUgZQu"
    },
    "use_sde_at_warmup": false,
    "policy_delay": 1,
    "target_noise_clip": 0.0,
    "target_policy_noise": 0.1,
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVvgIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLAUsTQwSIAFMAlE6FlCmMAV+UhZSMVC9ob21lL2plbmNoYW5nLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZ2VzL3N0YWJsZV9iYXNlbGluZXMzL2NvbW1vbi91dGlscy5weZSMBGZ1bmOUS4NDAgQBlIwDdmFslIWUKXSUUpR9lCiMC19fcGFja2FnZV9flIwYc3RhYmxlX2Jhc2VsaW5lczMuY29tbW9ulIwIX19uYW1lX1+UjB5zdGFibGVfYmFzZWxpbmVzMy5jb21tb24udXRpbHOUjAhfX2ZpbGVfX5SMVC9ob21lL2plbmNoYW5nLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZ2VzL3N0YWJsZV9iYXNlbGluZXMzL2NvbW1vbi91dGlscy5weZR1Tk5oAIwQX21ha2VfZW1wdHlfY2VsbJSTlClSlIWUdJRSlGgAjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoH32UfZQoaBZoDYwMX19xdWFsbmFtZV9flIwZY29uc3RhbnRfZm4uPGxvY2Fscz4uZnVuY5SMD19fYW5ub3RhdGlvbnNfX5R9lIwOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaBeMB19fZG9jX1+UTowLX19jbG9zdXJlX1+UaACMCl9tYWtlX2NlbGyUk5RHP1BiTdLxqfyFlFKUhZSMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMC4="
    },
    "actor_batch_norm_stats": [],
    "critic_batch_norm_stats": [],
    "actor_batch_norm_stats_target": [],
    "critic_batch_norm_stats_target": []
}